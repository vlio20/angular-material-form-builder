{"version":3,"sources":["webpack://angular-material-form-builder/webpack/universalModuleDefinition","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.directive.js","webpack://angular-material-form-builder/./src/lib/index.module.js","webpack://angular-material-form-builder/./src/lib/main/main.controller.js","webpack://angular-material-form-builder/./src/lib/utils/utils.service.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.tpl.html","webpack://angular-material-form-builder/webpack/bootstrap","webpack://angular-material-form-builder/webpack/startup","webpack://angular-material-form-builder/webpack/runtime/define property getters","webpack://angular-material-form-builder/webpack/runtime/hasOwnProperty shorthand","webpack://angular-material-form-builder/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","AgreementItemCtrl","Utils","$element","this","Element","item","extend","config","maxSelections","options","value","selected","AgreementItem","constructor","restrict","scope","controller","controllerAs","bindToController","AgreementViewCtrl","$scope","Scope","formItem","init","selectedOptions","_getSelectedOptions","disableOptions","isValid","_updateView","_updateValidity","isPreview","_enableWatchers","toggleSelectedOption","filter","option","length","required","form","$setValidity","$watch","newVal","undefined","AgreementView","$timeout","template","AgreementViewTemplate","link","element","attrs","ctrl","CheckboxesItemCtrl","deleteOption","index","splice","addOption","push","setTimeout","find","focus","CheckboxesItem","CheckboxesItemTemplate","CheckboxesViewCtrl","CheckboxesView","CheckboxesViewTemplate","FormItemCtrl","$attrs","Attrs","templates","agreement","input","chooseFromList","label","multipleChoices","matrix","checkboxes","textarea","type","props","title","helpText","deleteClicked","onDelete","_getItemTemplate","FormItem","$compile","onUp","onDown","FormItemTemplate","el","FormItemsContainerCtrl","items","delete","up","prevItem","down","nextItem","FormItemsContainer","FormItemsContainerTemplate","FormViewCtrl","FormView","FormViewTemplate","InputItemCtrl","InputItem","InputItemTemplate","InputViewCtrl","InputView","InputViewTemplate","elem","LabelItemCtrl","LabelItem","LabelItemTemplate","LabelViewCtrl","LabelView","LabelViewTemplate","MatrixItemCtrl","$document","RowContainer","angular","querySelector","ColumnContainer","rows","columns","deleteRow","addRow","bind","deleteColumn","addColumn","MatrixItem","MatrixItemTemplate","MatrixViewCtrl","valid","some","row","$watchGroup","MatrixView","MatrixViewTemplate","RadioButtonCtrl","RadioButton","RadioButtonTemplate","RadioButtonViewCtrl","RadioButtonView","RadioButtonViewTemplate","SelectCtrl","Select","SelectTemplate","SelectViewCtrl","SelectView","SelectViewTemplate","TextareaItemCtrl","TextareaItem","TextareaItemTemplate","TextareaViewCtrl","TextareaView","TextareaViewTemplate","service","MainController","directive","addItem","dest","src","Object","keys","reduce","result","key","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"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","file":"angular-material-form-builder.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-material-form-builder\"] = factory();\n\telse\n\t\troot[\"angular-material-form-builder\"] = factory();\n})(self, function() {\nreturn ","/**\n * @ngInject\n *\n * @param {import('../../utils/utils.service').Utils} Utils\n * @param {JQLite} $element\n */\nfunction AgreementItemCtrl(Utils, $element) {\n  this.Element = $element\n  this.item = Utils.extend(this.item || {}, {\n    config: {\n      maxSelections: null,\n    },\n    options: [\n      {\n        value: '',\n        selected: false,\n      },\n    ],\n  })\n}\n\nexport { AgreementItemCtrl }\n","import { AgreementItemCtrl } from './agreement-item.controller'\n// import AgreementItemTemplate from './agreement-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass AgreementItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.scope = {\n      item: '=',\n    }\n    this.controller = AgreementItemCtrl\n    this.controllerAs = 'Agreement'\n    this.bindToController = true\n  }\n}\n\nexport { AgreementItem }\n","class AgreementViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n          selected: false,\n        },\n      ],\n    })\n\n    this.selectedOptions = this._getSelectedOptions()\n    this.disableOptions = false\n\n    this.isValid = true\n    this._updateView()\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  toggleSelectedOption() {\n    this.selectedOptions = this._getSelectedOptions()\n    this._updateView()\n    this._updateValidity()\n  }\n\n  _getSelectedOptions() {\n    return this.formItem.options.filter((option) => {\n      return option.selected\n    })\n  }\n\n  _updateView() {\n    if (!this.formItem.config.maxSelections) {\n      this.disableOptions = false\n    } else if (\n      this.selectedOptions.length === this.formItem.config.maxSelections\n    ) {\n      this.disableOptions = true\n    } else {\n      this.disableOptions = false\n    }\n  }\n\n  _updateValidity() {\n    if (this.formItem.config.required) {\n      this.isValid = this.selectedOptions.length > 0\n    } else {\n      this.isValid = true\n    }\n\n    this.form.$setValidity('minSelections', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watch('AgreementView.formItem.config.required', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateView()\n        this._updateValidity()\n      }\n    })\n  }\n}\n\nexport { AgreementViewCtrl }\n","import { AgreementViewCtrl } from './agreement-view.controller'\nimport AgreementViewTemplate from './agreement-view.tpl.html'\n\nclass AgreementView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.template = AgreementViewTemplate\n    this.restrict = 'E'\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = AgreementViewCtrl\n    this.controllerAs = 'AgreementView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {AgreementViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { AgreementView }\n","class CheckboxesItemCtrl {\n  /**\n   * @ngInject\n   *\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        maxSelections: null,\n      },\n      options: [\n        {\n          value: '',\n          selected: false,\n        },\n      ],\n    })\n  }\n\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n      selected: false,\n    })\n    // Focus new element\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { CheckboxesItemCtrl }\n","import CheckboxesItemTemplate from './checkboxes-item.tpl.html'\nimport { CheckboxesItemCtrl } from './checkboxes-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nfunction CheckboxesItem() {\n  const directive = {\n    restrict: 'E',\n    template: CheckboxesItemTemplate,\n    scope: {\n      item: '=',\n    },\n    controller: CheckboxesItemCtrl,\n    controllerAs: 'Checkboxes',\n    bindToController: true,\n  }\n\n  return directive\n}\n\nexport { CheckboxesItem }\n","class CheckboxesViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem || {}, {\n      config: {},\n      options: [],\n    })\n\n    this.selectedOptions = this._getSelectedOptions()\n    this.disableOptions = false\n\n    this.isValid = true\n    this._updateView()\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  toggleSelectedOption() {\n    this.selectedOptions = this._getSelectedOptions()\n    this._updateView()\n    this._updateValidity()\n  }\n\n  _getSelectedOptions() {\n    return this.formItem.options.filter((option) => {\n      return option.selected\n    })\n  }\n\n  _updateView() {\n    if (!this.formItem.config.maxSelections) {\n      this.disableOptions = false\n    } else if (\n      this.selectedOptions.length === this.formItem.config.maxSelections\n    ) {\n      this.disableOptions = true\n    } else {\n      this.disableOptions = false\n    }\n  }\n\n  _updateValidity() {\n    if (this.formItem.config.required) {\n      this.isValid = this.selectedOptions.length > 0\n    } else {\n      this.isValid = true\n    }\n\n    this.form.$setValidity('minSelections', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watch('CheckboxesView.formItem.config.required', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateView()\n        this._updateValidity()\n      }\n    })\n  }\n}\n\nexport { CheckboxesViewCtrl }\n","import CheckboxesViewTemplate from './checkboxes-view.tpl.html'\nimport { CheckboxesViewCtrl } from './checkboxes-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass CheckboxesView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = CheckboxesViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = CheckboxesViewCtrl\n    this.controllerAs = 'CheckboxesView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {CheckboxesViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { CheckboxesView }\n","class FormItemCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IAttributes} $attrs\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($attrs, Utils) {\n    this.Attrs = $attrs\n    this.Utils = Utils\n    this.templates = {\n      agreement: '<agreement-item item=\"FormItem.item\"></agreement-item>',\n      input: '<input-item item=\"FormItem.item\"></input-item>',\n      chooseFromList:\n        '<bet-form-choose-from-list item=\"FormItem.item\"></bet-form-choose-from-list>',\n      label: '<label-item item=\"FormItem.item\"></label-item>',\n      multipleChoices:\n        '<radio-button-item item=\"FormItem.item\"></radio-button-item>',\n      matrix: '<matrix-item item=\"FormItem.item\"></matrix-item>',\n      checkboxes: '<checkboxes-item item=\"FormItem.item\"></checkboxes-item>',\n      textarea: '<textarea-item item=\"FormItem.item\"></textarea-item>',\n    }\n    this.item = {}\n  }\n\n  init() {\n    this.item = this.Utils.extend(this.item || {}, {\n      type: this.Attrs.type,\n      props: {\n        title: '',\n        helpText: '',\n      },\n      config: {\n        required: false,\n      },\n    })\n  }\n\n  deleteClicked() {\n    this.onDelete({ item: this.item, index: this.index() })\n  }\n\n  /**\n   *\n   * @param {string} type\n   */\n  _getItemTemplate(type) {\n    const prefix =\n      '' +\n      '<div class=\"form-item-container\">' +\n      '<div class=\"form-item-actions\">' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onDelete\" ng-click=\"FormItem.deleteClicked()\"> ' +\n      '<md-icon class=\"material-icons small\">delete</md-icon>' +\n      '</md-button>' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onUp\" ng-click=\"FormItem.onUp({item: FormItem.item, index: FormItem.index()})\"> ' +\n      '<md-icon class=\"material-icons small\">arrow_drop_up</md-icon>' +\n      '</md-button>' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onDown\" ng-click=\"FormItem.onDown({item: FormItem.item, index: FormItem.index()})\"> ' +\n      '<md-icon class=\"material-icons small\">arrow_drop_down</md-icon>' +\n      '</md-button>' +\n      '</div>' +\n      '<md-input-container>' +\n      '<label>Field Title</label>' +\n      '<input ng-model=\"FormItem.item.props.title\"/>' +\n      '</md-input-container>' +\n      '<md-input-container>' +\n      '<label>Help Text</label>' +\n      '<input ng-model=\"FormItem.item.props.helpText\" />' +\n      '</md-input-container>'\n\n    const suffix =\n      '' +\n      '<md-input-container>' +\n      '<md-checkbox ng-model=\"FormItem.item.config.required\">Required field</md-checkbox>' +\n      '</md-input-container>' +\n      '</div>'\n\n    return prefix + this.templates[type] + suffix\n  }\n}\n\nexport { FormItemCtrl }\n","import FormItemTemplate from './form-item.tpl.html'\nimport { FormItemCtrl } from './form-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormItem {\n  /**\n   * @ngInject\n   * @param {ng.ICompileService} $compile\n   */\n  constructor($compile) {\n    this.$compile = $compile\n    this.restrict = 'E'\n    this.scope = {\n      item: '=',\n      onDelete: '&',\n      onUp: '&',\n      onDown: '&',\n      index: '&',\n    }\n    this.controller = FormItemCtrl\n    this.controllerAs = 'FormItem'\n    this.bindToController = true\n    this.template = FormItemTemplate\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormItemCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    const template = ctrl._getItemTemplate(attrs.type)\n    const el = this.$compile(template)(scope)\n    // element.append(el)\n    // if done like above adds twice\n    // element.append(this.$compile(template)(scope))\n    ctrl.init()\n    return el\n  }\n}\nexport { FormItem }\n","class FormItemsContainerCtrl {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    /**\n     * @type {import('../../main/main.controller').FormConfig}\n     */\n    this.form = {\n      items: [],\n    }\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  delete(item, index) {\n    this.form.items.splice(index, 1)\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  up(item, index) {\n    if (index !== 0) {\n      const prevItem = this.form.items[index - 1]\n      this.form.items[index] = prevItem\n      this.form.items[index - 1] = item\n    }\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  down(item, index) {\n    if (index !== this.form.items.length - 1) {\n      const nextItem = this.form.items[index + 1]\n      this.form.items[index] = nextItem\n      this.form.items[index + 1] = item\n    }\n  }\n}\n\nexport { FormItemsContainerCtrl }\n","import { FormItemsContainerCtrl } from './form-items-container.controller'\nimport FormItemsContainerTemplate from './form-items-container.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormItemsContainer {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.scope = {\n      form: '=',\n    }\n    this.template = FormItemsContainerTemplate\n    this.controller = FormItemsContainerCtrl\n    this.controllerAs = 'container'\n    this.bindToController = true\n  }\n}\n\nexport { FormItemsContainer }\n","class FormViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScù} $scope\n   */\n  constructor($scope) {\n    this.Scope = $scope\n  }\n\n  init() {}\n}\n\nexport { FormViewCtrl }\n","import { FormViewCtrl } from './form-view.controller'\nimport FormViewTemplate from './form-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormView {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = FormViewTemplate\n    this.scope = {\n      form: '=',\n    }\n    this.controller = FormViewCtrl\n    this.controllerAs = 'FormView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    ctrl.init()\n  }\n}\n\nexport { FormView }\n","class InputItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        type: 'text',\n      },\n    })\n  }\n}\n\nexport { InputItemCtrl }\n","import { InputItemCtrl } from './input-item.controller'\nimport InputItemTemplate from './input-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass InputItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = InputItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = InputItemCtrl\n    this.controllerAs = 'Input'\n    this.bindToController = true\n  }\n}\n\nexport { InputItem }\n","class InputViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.Utils.extend(this.formItem, {\n      config: {},\n    })\n  }\n}\n\nexport { InputViewCtrl }\n","import { InputViewCtrl } from './input-view.controller'\nimport InputViewTemplate from './input-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass InputView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = InputViewTemplate\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.controller = InputViewCtrl\n    this.controllerAs = 'InputView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormItemCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { InputView }\n","class LabelItemCtrl {\n  /**\n   * @ngInject\n   * @param {JQLite} $element\n   */\n  constructor($element) {\n    this.Element = $element\n  }\n}\n\nexport { LabelItemCtrl }\n","import { LabelItemCtrl } from './label-item.controller'\nimport LabelItemTemplate from './label-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass LabelItem {\n  constructor() {\n    this.restrict = 'E'\n    this.template = LabelItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = LabelItemCtrl\n    this.controllerAs = 'Label'\n    this.bindToController = true\n  }\n}\n\nexport { LabelItem }\n","class LabelViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n  }\n\n  init() {\n    this.Utils.extend(this.formItem, {})\n  }\n}\n\nexport { LabelViewCtrl }\n","import { LabelViewCtrl } from './label-view.controller'\nimport LabelViewTemplate from './label-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass LabelView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = LabelViewTemplate\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.controller = LabelViewCtrl\n    this.controllerAs = 'LabelView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {LabelViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { LabelView }\n","class MatrixItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {ng.IDocumentService} $document\n   */\n  constructor(Utils, $document) {\n    this.RowContainer = angular.element(\n      $document[0].querySelector('.rowContainer')\n    )\n    this.ColumnContainer = angular.element(\n      $document[0].querySelector('.columnContainer')\n    )\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        rows: [\n          {\n            value: '',\n          },\n        ],\n        columns: [\n          {\n            value: '',\n          },\n        ],\n      },\n    })\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteRow(index) {\n    this.item.config.rows.splice(index, 1)\n  }\n\n  addRow() {\n    this.item.config.rows.push({\n      value: '',\n    })\n\n    setTimeout(\n      function () {\n        const options = this.RowContainer.find('input')\n        const addedOption = options[options.length - 1]\n        addedOption.focus()\n      }.bind(this),\n      0\n    )\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteColumn(index) {\n    this.item.config.columns.splice(index, 1)\n  }\n\n  addColumn() {\n    this.item.config.columns.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.ColumnContainer.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { MatrixItemCtrl }\n","import { MatrixItemCtrl } from './matrix-item.controller'\nimport MatrixItemTemplate from './matrix-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass MatrixItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = MatrixItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = MatrixItemCtrl\n    this.controllerAs = 'Matrix'\n    this.bindToController = true\n  }\n}\nexport { MatrixItem }\n","class MatrixViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.isValid = true\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {\n        rows: [],\n        columns: [],\n      },\n    })\n\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  _updateValidity() {\n    let valid = true\n    if (this.formItem.config.required) {\n      valid = !this.formItem.config.rows.some(\n        (row) => typeof row['selected'] === 'undefined'\n      )\n      //   for (let i = 0; i < this.formItem.config.rows.length; i++) {\n      //     if (typeof this.formItem.config.rows[i]['selected'] === 'undefined') {\n      //       valid = false\n      //       break\n      //     }\n      //   }\n    }\n\n    this.isValid = valid\n    this.form.$setValidity('required', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watchGroup(\n      [\n        'MatrixView.formItem.config.required',\n        'MatrixView.formItem.config.rows.length',\n      ],\n      (newVal) => {\n        if (newVal !== undefined) {\n          this._updateValidity()\n        }\n      }\n    )\n  }\n}\nexport { MatrixViewCtrl }\n","import MatrixViewTemplate from './matrix-view.tpl.html'\nimport { MatrixViewCtrl } from './matrix-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass MatrixView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = MatrixViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = MatrixViewCtrl\n    this.controllerAs = 'MatrixView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {MatrixViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { MatrixView }\n","class RadioButtonCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n        },\n      ],\n    })\n  }\n\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { RadioButtonCtrl }\n","import { RadioButtonCtrl } from './radio-button-item.controller'\nimport RadioButtonTemplate from './radio-button-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass RadioButton {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = RadioButtonTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = RadioButtonCtrl\n    this.controllerAs = 'RadioButton'\n    this.bindToController = true\n  }\n}\n\nexport { RadioButton }\n","class RadioButtonViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n      options: [],\n    })\n  }\n}\n\nexport { RadioButtonViewCtrl }\n","import { RadioButtonViewCtrl } from './radio-button-view.controller'\nimport RadioButtonViewTemplate from './radio-button-view.tpl.html'\n\nclass RadioButtonView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.template = RadioButtonViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = RadioButtonViewCtrl\n    this.controllerAs = 'RadioButtonView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {RadioButtonViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { RadioButtonView }\n","class SelectCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n        },\n      ],\n    })\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { SelectCtrl }\n","import SelectTemplate from './select-item.tpl.html'\nimport { SelectCtrl } from './select-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass Select {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = SelectTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = SelectCtrl\n    this.controllerAs = 'Select'\n    this.bindToController = true\n  }\n}\n\nexport { Select }\n","class SelectViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n      options: [],\n    })\n  }\n}\n\nexport { SelectViewCtrl }\n","import SelectViewTemplate from './select-view.tpl.html'\nimport { SelectViewCtrl } from './select-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass SelectView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n\n    this.restrict = 'E'\n    this.template = SelectViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = SelectViewCtrl\n    this.controllerAs = 'SelectView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {SelectViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { SelectView }\n","class TextareaItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n    })\n  }\n}\n\nexport { TextareaItemCtrl }\n","import { TextareaItemCtrl } from './textarea-item.controller'\nimport TextareaItemTemplate from './textarea-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass TextareaItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    this.template = TextareaItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = TextareaItemCtrl\n    this.controllerAs = 'Textarea'\n    this.bindToController = true\n  }\n}\n\nexport { TextareaItem }\n","class TextareaViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n    })\n  }\n}\n\nexport { TextareaViewCtrl }\n","import { TextareaViewCtrl } from './textarea-view.controller'\nimport TextareaViewTemplate from './textarea-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass TextareaView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.restrict = 'E'\n    this.template = TextareaViewTemplate\n    this.controller = TextareaViewCtrl\n    this.controllerAs = 'TextareaView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {TextareaViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { TextareaView }\n","import './index.scss'\nimport { AgreementItem } from './directives/agreement-item/agreement-item.directive'\nimport { AgreementView } from './directives/agreement-item/agreement-view.directive'\nimport { MainController } from './main/main.controller'\nimport { Utils } from './utils/utils.service'\nimport { CheckboxesItem } from './directives/checkboxes-item/checkboxes-item.directive'\nimport { CheckboxesView } from './directives/checkboxes-item/checkboxes-view.directive'\nimport { FormItem } from './directives/form-item/form-item.directive'\nimport { FormItemsContainer } from './directives/form-items-container/form-items-container.directive'\nimport { FormView } from './directives/form-view/form-view.directive'\nimport { InputItem } from './directives/input-item/input-item.directive'\nimport { InputView } from './directives/input-item/input-view.directive'\nimport { LabelItem } from './directives/label-item/label-item.directive'\nimport { LabelView } from './directives/label-item/label-view.directive'\nimport { MatrixItem } from './directives/matrix-item/matrix-item.directive'\nimport { MatrixView } from './directives/matrix-item/matrix-view.directive'\nimport { RadioButton } from './directives/radio-button-item/radio-button-item.directive'\nimport { RadioButtonView } from './directives/radio-button-item/radio-button-view.directive'\nimport { SelectView } from './directives/select-item/select-view.directive'\nimport { Select } from './directives/select-item/select-item.directive'\nimport { TextareaItem } from './directives/textarea-item/textarea-item.directive'\nimport { TextareaView } from './directives/textarea-item/textarea-view.directive'\n\nexport default angular\n  .module('angularMaterialFormBuilder', [\n    'ngMaterial',\n    'angular-sortable-view',\n    'ngMessages',\n  ])\n  .service('Utils', Utils)\n  .controller('MainController', MainController)\n  .directive('agreementItem', AgreementItem)\n  .directive('agreementView', AgreementView)\n  .directive('checkboxesItem', CheckboxesItem)\n  .directive('checkboxesView', CheckboxesView)\n  .directive('formItem', FormItem)\n  .directive('formItemsContainer', FormItemsContainer)\n  .directive('formView', FormView)\n  .directive('inputItem', InputItem)\n  .directive('inputView', InputView)\n  .directive('labelItem', LabelItem)\n  .directive('labelView', LabelView)\n  .directive('matrixItem', MatrixItem)\n  .directive('matrixView', MatrixView)\n  .directive('radioButtonItem', RadioButton)\n  .directive('radioButtonView', RadioButtonView)\n  .directive('selectItem', Select)\n  .directive('selectView', SelectView)\n  .directive('textareaItem', TextareaItem)\n  .directive('textareaView', TextareaView)\n","/**\n * @typedef {{type:string}} Item\n * @typedef {{items: Item[]}} FormConfig\n */\n\nclass MainController {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    /**\n     * @type {FormConfig}\n     */\n    this.form = {\n      items: [],\n    }\n  }\n\n  /**\n   * Add new Item\n   * @param {string} type\n   */\n  addItem(type) {\n    this.form.items.push({\n      type,\n    })\n  }\n\n  /**\n   * Remove item at index\n   * @param {Item} item\n   * @param {number} index\n   */\n  delete(item, index) {\n    this.form.items.splice(index, 1)\n  }\n\n  /**\n   * insert before (bounded)\n   * Pops out latest element (wanted?)\n   * @param {Item} item\n   * @param {number} index\n   */\n  up(item, index) {\n    if (index !== 0) {\n      const prevItem = this.form.items[index - 1]\n      this.form.items[index] = prevItem\n      this.form.items[index - 1] = item\n    }\n  }\n\n  /**\n   * insert after (bounded)\n   * Pops out latest element (wanted?)\n   * @param {Item} item\n   * @param {number} index\n   */\n  down(item, index) {\n    if (index !== this.form.items.length - 1) {\n      const nextItem = this.form.items[index + 1]\n      this.form.items[index] = nextItem\n      this.form.items[index + 1] = item\n    }\n  }\n}\n\nexport { MainController }\n","class Utils {\n  /**\n   * Recursively extend object properties\n   * @param {Object} dest\n   * @param {Object} src\n   * @returns {Object}\n   */\n  extend(dest, src) {\n    return Object.keys(src).reduce(\n      (result, key) => {\n        if (typeof result[key] === 'undefined') {\n          result[key] = src[key]\n        } else if (typeof src[key] === 'object') {\n          result[key] = this.extend(result[key], src[key])\n        }\n        return result\n      },\n      typeof dest === 'undefined' ? {} : dest\n    )\n  }\n}\n\nexport { Utils }\n","export default \"<md-input-container>\\n  <div\\n    layout=\\\"{{AgreementView.formItem.config.direction == 'horizontal' ? 'row' : 'columb'}}\\\"\\n  >\\n    <md-checkbox\\n      ng-model=\\\"AgreementView.formItem.options[0].selected\\\"\\n      ng-change=\\\"AgreementView.toggleSelectedOption(option)\\\"\\n      ng-disabled=\\\"AgreementView.disableOptions && !option.selected\\\"\\n      aria-label=\\\"...\\\"\\n      >{{AgreementView.formItem.options[0].value}}</md-checkbox\\n    >\\n  </div>\\n\\n  <div ng-messages=\\\"AgreementView.form.$error\\\">\\n    <div ng-message=\\\"minSelections\\\">\\n      Must select {{AgreementView.formItem.maxSelections || 1}} items\\n    </div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Checkboxes.item.options\\\"\\n>\\n  <md-input-container class=\\\"md-block\\\">\\n    <label>Max Selections</label>\\n    <input type=\\\"number\\\" ng-model=\\\"Checkboxes.item.config.maxSelections\\\" />\\n  </md-input-container>\\n\\n  <md-switch\\n    ng-model=\\\"Checkboxes.item.config.direction\\\"\\n    ng-true-value=\\\"'horizontal'\\\"\\n    ng-false-value=\\\"'vertical'\\\"\\n  >\\n    Layout direction ({{Checkboxes.item.config.direction == 'horizontal' ?\\n    'Horizontal' : 'Vertical'}})\\n  </md-switch>\\n\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"option in Checkboxes.item.options track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder option item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Option {{$index + 1}}</label>\\n      <input ng-model=\\\"option.value\\\" />\\n    </md-input-container>\\n\\n    <md-button class=\\\"md-button\\\" ng-click=\\\"Checkboxes.deleteOption($index)\\\">\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n    </md-button>\\n  </div>\\n  <div layout=\\\"row\\\" layout-align=\\\"start\\\">\\n    <md-button\\n      class=\\\"md-primary add-option-button\\\"\\n      ng-click=\\\"Checkboxes.addOption()\\\"\\n    >\\n      <md-icon class=\\\"material-icons\\\">add</md-icon>\\n    </md-button>\\n  </div>\\n</div>\\n\";","export default \"<md-input-container>\\n  <div\\n    layout=\\\"{{CheckboxesView.formItem.config.direction == 'horizontal' ? 'row' : 'column'}}\\\"\\n  >\\n    <md-checkbox\\n      ng-repeat=\\\"option in CheckboxesView.formItem.options track by $index\\\"\\n      ng-model=\\\"option.selected\\\"\\n      ng-change=\\\"CheckboxesView.toggleSelectedOption(option)\\\"\\n      ng-disabled=\\\"CheckboxesView.disableOptions && !option.selected\\\"\\n      aria-label=\\\"...\\\"\\n      >{{option.value}}</md-checkbox\\n    >\\n  </div>\\n\\n  <div ng-messages=\\\"CheckboxesView.form.$error\\\">\\n    <div ng-message=\\\"minSelections\\\">\\n      Must select {{CheckboxesView.formItem.maxSelections || 1}} items\\n    </div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div class=\\\"form-item-container md-inline-form\\\">\\n  <div class=\\\"form-item-actions\\\">\\n    <md-button\\n      class=\\\"md-button\\\"\\n      ng-if=\\\"FormItem.Attrs.onDelete\\\"\\n      ng-click=\\\"FormItem.deleteClicked()\\\"\\n    >\\n      <md-icon class=\\\"material-icons small\\\">delete</md-icon>\\n    </md-button>\\n    <md-button\\n      class=\\\"md-button\\\"\\n      ng-if=\\\"FormItem.Attrs.onUp\\\"\\n      ng-click=\\\"FormItem.onUp({item: FormItem.item, index: FormItem.index()})\\\"\\n    >\\n      <md-icon class=\\\"material-icons small\\\">arrow_drop_up</md-icon>\\n    </md-button>\\n    <md-button\\n      class=\\\"md-button\\\"\\n      ng-if=\\\"FormItem.Attrs.onDown\\\"\\n      ng-click=\\\"FormItem.onDown({item: FormItem.item, index: FormItem.index()})\\\"\\n    >\\n      <md-icon class=\\\"material-icons small\\\">arrow_drop_down</md-icon>\\n    </md-button>\\n  </div>\\n\\n  <md-input-container ng-if=\\\"FormItem.item.type != 'label'\\\" class=\\\"md-block\\\">\\n    <label>Field Title</label>\\n    <input ng-model=\\\"FormItem.item.props.title\\\" />\\n  </md-input-container>\\n\\n  <md-input-container ng-if=\\\"FormItem.item.type != 'label'\\\" class=\\\"md-block\\\">\\n    <label>Help Text</label>\\n    <input ng-model=\\\"FormItem.item.props.helpText\\\" />\\n  </md-input-container>\\n\\n  <md-input-container\\n    ng-if=\\\"FormItem.item.type === 'agreement'\\\"\\n    class=\\\"md-block\\\"\\n  >\\n    <label>Option Text</label>\\n    <input ng-model=\\\"FormItem.item.options[0].value\\\" />\\n  </md-input-container>\\n\\n  <div ng-switch=\\\"FormItem.item.type\\\">\\n    <agreement-item\\n      ng-switch-when=\\\"agreement\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></agreement-item>\\n    <label-item ng-switch-when=\\\"label\\\" item=\\\"FormItem.item\\\"></label-item>\\n    <input-item ng-switch-when=\\\"input\\\" item=\\\"FormItem.item\\\"></input-item>\\n    <radio-button-item\\n      ng-switch-when=\\\"multipleChoices\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></radio-button-item>\\n    <matrix-item ng-switch-when=\\\"matrix\\\" item=\\\"FormItem.item\\\"></matrix-item>\\n    <checkboxes-item\\n      ng-switch-when=\\\"checkboxes\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></checkboxes-item>\\n    <textarea-item\\n      ng-switch-when=\\\"textarea\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></textarea-item>\\n    <select-item\\n      ng-switch-when=\\\"chooseFromList\\\"\\n      item=\\\"FormItem.item\\\"\\n    ></select-item>\\n    <p ng-switch-default>UNKNOWN TYPE</p>\\n  </div>\\n\\n  <md-input-container ng-if=\\\"FormItem.item.type != 'label'\\\" class=\\\"md-block\\\">\\n    <md-checkbox ng-model=\\\"FormItem.item.config.required\\\"\\n      >Required field</md-checkbox\\n    >\\n  </md-input-container>\\n</div>\\n\";","export default \"<div>\\n  <form-item\\n    ng-repeat=\\\"item in container.form.items track by $index\\\"\\n    type=\\\"{{item.type}}\\\"\\n    item=\\\"item\\\"\\n    index=\\\"$index\\\"\\n    on-delete=\\\"container.delete(item, index)\\\"\\n    on-up=\\\"container.up(item, index)\\\"\\n    on-down=\\\"container.down(item, index)\\\"\\n  >\\n  </form-item>\\n</div>\\n\";","export default \"<div class=\\\"md-inline-form\\\">\\n  <div\\n    class=\\\"formItem\\\"\\n    ng-repeat=\\\"formItem in FormView.form.items track by $index\\\"\\n    ng-switch=\\\"formItem.type\\\"\\n    layout=\\\"column\\\"\\n  >\\n    <ng-form name=\\\"formItemForm\\\">\\n      <div>\\n        <div class=\\\"formItem-title\\\">{{formItem.props.title}}</div>\\n        <div class=\\\"formItem-help-text\\\">{{formItem.props.helpText}}</div>\\n\\n        <agreement-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"agreement\\\"\\n        ></agreement-view>\\n        <checkboxes-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"checkboxes\\\"\\n        ></checkboxes-view>\\n        <radio-button-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"multipleChoices\\\"\\n        ></radio-button-view>\\n        <input-view\\n          form-item=\\\"formItem\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"input\\\"\\n        ></input-view>\\n        <textarea-view\\n          form-item=\\\"formItem\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"textarea\\\"\\n        ></textarea-view>\\n        <matrix-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"matrix\\\"\\n        ></matrix-view>\\n        <select-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"chooseFromList\\\"\\n        ></select-view>\\n        <label-view\\n          form-item=\\\"formItem\\\"\\n          is-preview=\\\"true\\\"\\n          form=\\\"formItemForm\\\"\\n          ng-switch-when=\\\"label\\\"\\n        ></label-view>\\n      </div>\\n    </ng-form>\\n  </div>\\n</div>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <label>Placeholder</label>\\n  <input type=\\\"text\\\" ng-model=\\\"Input.item.config.placeholder\\\" />\\n</md-input-container>\\n<md-input-container class=\\\"md-block\\\">\\n  <label>Type</label>\\n  <md-select ng-model=\\\"Input.item.config.type\\\">\\n    <md-option value=\\\"text\\\">Text</md-option>\\n    <md-option value=\\\"number\\\">Number</md-option>\\n    <md-option value=\\\"email\\\">Email</md-option>\\n  </md-select>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <input\\n    ng-model=\\\"InputView.formItem.value\\\"\\n    type=\\\"{{InputView.formItem.config.type}}\\\"\\n    placeholder=\\\"{{InputView.formItem.config.placeholder}}\\\"\\n    ng-required=\\\"InputView.formItem.config.required\\\"\\n  />\\n  <div ng-messages=\\\"InputView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <label>Text</label>\\n  <textarea ng-model=\\\"Label.item.value\\\" md-maxlength=\\\"150\\\" rows=\\\"5\\\"></textarea>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <md-content flex layout-padding layout=\\\"row\\\" layout-align=\\\"center center\\\">\\n    <pre>\\n      <span class=\\\"formItem-content\\\">{{LabelView.formItem.value}}</span>\\n    </pre>\\n  </md-content>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container columnContainer\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Matrix.item.config.columns\\\"\\n>\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"column in Matrix.item.config.columns track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder option item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"input-container\\\">\\n      <label>Column {{$index + 1}}</label>\\n      <input ng-model=\\\"column.value\\\" />\\n    </md-input-container>\\n\\n    <md-button\\n      class=\\\"md-button\\\"\\n      md-no-ink\\n      aria-label=\\\"delete column item\\\"\\n      ng-click=\\\"Matrix.deleteColumn($index)\\\"\\n    >\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n      <md-tooltip md-autohide=\\\"true\\\">Delete</md-tooltip>\\n    </md-button>\\n  </div>\\n  <div layout=\\\"row\\\" layout-align=\\\"start\\\">\\n    <md-button\\n      class=\\\"md-primary add-option-button\\\"\\n      md-no-ink\\n      aria-label=\\\"add option item\\\"\\n      ng-click=\\\"Matrix.addColumn()\\\"\\n      >Add Column</md-button\\n    >\\n  </div>\\n</div>\\n\\n<div\\n  class=\\\"sortable-container rowContainer\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Matrix.item.config.rows\\\"\\n>\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"row in Matrix.item.config.rows track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder row item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"input-container\\\">\\n      <label>Row {{$index + 1}}</label>\\n      <input ng-model=\\\"row.value\\\" />\\n    </md-input-container>\\n\\n    <md-button\\n      class=\\\"md-button\\\"\\n      md-no-ink\\n      aria-label=\\\"delete row item\\\"\\n      ng-click=\\\"Matrix.deleteRow($index)\\\"\\n    >\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n      <md-tooltip md-autohide=\\\"true\\\">Delete</md-tooltip>\\n    </md-button>\\n  </div>\\n  <div layout=\\\"row\\\" layout-align=\\\"start\\\">\\n    <md-button\\n      class=\\\"md-primary add-option-button\\\"\\n      md-no-ink\\n      aria-label=\\\"add row item\\\"\\n      ng-click=\\\"Matrix.addRow()\\\"\\n      >Add row</md-button\\n    >\\n  </div>\\n</div>\\n\";","export default \"<md-input-container class=\\\"matrix-container md-block\\\" layout=\\\"column\\\">\\n  <div class=\\\"matrix\\\">\\n    <div class=\\\"matrix-row\\\" flex layout=\\\"row\\\">\\n      <span class=\\\"matrix-cell\\\" flex=\\\"20\\\"></span>\\n      <span\\n        class=\\\"matrix-cell matrix-cell-header\\\"\\n        flex\\n        ng-repeat=\\\"column in MatrixView.formItem.config.columns track by $index\\\"\\n        >{{column.value}}</span\\n      >\\n    </div>\\n    <div\\n      class=\\\"matrix-row\\\"\\n      ng-repeat=\\\"row in MatrixView.formItem.config.rows track by $index\\\"\\n      layout=\\\"row\\\"\\n    >\\n      <span class=\\\"matrix-cell\\\" flex=\\\"20\\\" layout=\\\"column\\\" layout-align=\\\"center\\\"\\n        >{{row.value}}</span\\n      >\\n      <md-radio-group\\n        ng-model=\\\"row.selected\\\"\\n        ng-change=\\\"MatrixView._updateValidity()\\\"\\n        flex\\n        layout=\\\"row\\\"\\n      >\\n        <span\\n          class=\\\"matrix-cell radio-button-cell\\\"\\n          flex\\n          ng-repeat=\\\"column in MatrixView.formItem.config.columns track by $index\\\"\\n        >\\n          <md-radio-button\\n            value=\\\"{{column.value}}\\\"\\n            aria-label=\\\"...\\\"\\n          ></md-radio-button>\\n        </span>\\n      </md-radio-group>\\n    </div>\\n  </div>\\n\\n  <div ng-messages=\\\"MatrixView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"RadioButton.item.options\\\"\\n>\\n  <md-switch\\n    ng-model=\\\"RadioButton.item.config.direction\\\"\\n    ng-true-value=\\\"'horizontal'\\\"\\n    ng-false-value=\\\"'vertical'\\\"\\n  >\\n    Layout direction ({{RadioButton.item.config.direction == 'horizontal' ?\\n    'Horizontal' : 'Vertical'}})\\n  </md-switch>\\n\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"option in RadioButton.item.options track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder option item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Option {{$index + 1}}</label>\\n      <input ng-model=\\\"option.value\\\" />\\n    </md-input-container>\\n\\n    <md-button\\n      class=\\\"md-button md-warn\\\"\\n      ng-click=\\\"RadioButton.deleteOption($index)\\\"\\n    >\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n    </md-button>\\n  </div>\\n\\n  <md-button class=\\\"md-raised md-accent\\\" ng-click=\\\"RadioButton.addOption()\\\"\\n    >Add Option</md-button\\n  >\\n</div>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <md-radio-group\\n    name=\\\"formItemInput\\\"\\n    ng-required=\\\"RadioButtonView.formItem.config.required\\\"\\n    ng-model=\\\"RadioButtonView.formItem.value\\\"\\n    layout=\\\"{{RadioButtonView.formItem.config.direction == 'horizontal' ? 'row' : 'column'}}\\\"\\n    required\\n  >\\n    <md-radio-button\\n      ng-repeat=\\\"option in RadioButtonView.formItem.options track by $index\\\"\\n      value=\\\"{{option.value}}\\\"\\n      aria-label=\\\"...\\\"\\n    >\\n      {{option.value}}\\n    </md-radio-button>\\n  </md-radio-group>\\n\\n  <div ng-messages=\\\"RadioButtonView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<div\\n  class=\\\"sortable-container\\\"\\n  layout=\\\"column\\\"\\n  sv-root\\n  sv-part=\\\"Select.item.options\\\"\\n>\\n  <div\\n    class=\\\"option-item\\\"\\n    layout=\\\"row\\\"\\n    ng-repeat=\\\"option in Select.item.options track by $index\\\"\\n    sv-element\\n  >\\n    <md-button\\n      class=\\\"md-button handle\\\"\\n      md-no-ink\\n      aria-label=\\\"reorder option item\\\"\\n      sv-handle\\n    >\\n      <md-icon class=\\\"material-icons\\\">reorder</md-icon>\\n    </md-button>\\n\\n    <md-input-container class=\\\"md-block\\\">\\n      <label>Option {{$index + 1}}</label>\\n      <input ng-model=\\\"option.value\\\" />\\n    </md-input-container>\\n\\n    <md-button class=\\\"md-button md-warn\\\" ng-click=\\\"Select.deleteOption($index)\\\">\\n      <md-icon class=\\\"material-icons\\\">delete</md-icon>\\n    </md-button>\\n  </div>\\n\\n  <md-button class=\\\"md-raised md-accent\\\" ng-click=\\\"Select.addOption()\\\"\\n    >Add Option</md-button\\n  >\\n</div>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <md-select\\n    name=\\\"formItemInput\\\"\\n    ng-required=\\\"SelectView.formItem.config.required\\\"\\n    ng-model=\\\"SelectView.formItem.value\\\"\\n  >\\n    <md-option\\n      ng-repeat=\\\"option in SelectView.formItem.options track by $index\\\"\\n      ng-value=\\\"option.value\\\"\\n      >{{ option.value }}</md-option\\n    >\\n  </md-select>\\n  <div ng-messages=\\\"SelectView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <label>Placeholder</label>\\n  <input type=\\\"text\\\" ng-model=\\\"Textarea.item.config.placeholder\\\" />\\n</md-input-container>\\n\";","export default \"<md-input-container class=\\\"md-block\\\">\\n  <textarea\\n    ng-model=\\\"TextareaView.formItem.value\\\"\\n    placeholder=\\\"{{TextareaView.formItem.config.placeholder}}\\\"\\n    ng-required=\\\"TextareaView.formItem.config.required\\\"\\n  ></textarea>\\n  <div ng-messages=\\\"TextareaView.form.$error\\\">\\n    <div ng-message=\\\"required\\\">This field is required</div>\\n  </div>\\n</md-input-container>\\n\";","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/lib/index.module.js\");\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}