{"version":3,"sources":["webpack://angular-material-form-builder/webpack/universalModuleDefinition","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.tpl.html","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/agreement-item/agreement-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/checkboxes-item/checkboxes-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-item/form-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-items-container/form-items-container.directive.js","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/form-view/form-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/input-item/input-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/label-item/label-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/matrix-item/matrix-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/radio-button-item/radio-button-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/select-item/select-view.directive.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.controller.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-item.directive.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.controller.js","webpack://angular-material-form-builder/./src/lib/directives/textarea-item/textarea-view.directive.js","webpack://angular-material-form-builder/./src/lib/index.module.js","webpack://angular-material-form-builder/./src/lib/main/main.controller.js","webpack://angular-material-form-builder/./src/lib/utils/utils.service.js","webpack://angular-material-form-builder/webpack/bootstrap","webpack://angular-material-form-builder/webpack/startup","webpack://angular-material-form-builder/webpack/runtime/define property getters","webpack://angular-material-form-builder/webpack/runtime/global","webpack://angular-material-form-builder/webpack/runtime/hasOwnProperty shorthand","webpack://angular-material-form-builder/webpack/runtime/make namespace object","webpack://angular-material-form-builder/webpack/runtime/publicPath"],"names":["root","factory","exports","module","define","amd","self","AgreementItemCtrl","Utils","$element","this","Element","item","extend","config","maxSelections","options","value","selected","AgreementItem","restrict","scope","controller","controllerAs","bindToController","AgreementViewCtrl","$scope","Scope","formItem","selectedOptions","_getSelectedOptions","disableOptions","isValid","_updateView","_updateValidity","isPreview","_enableWatchers","filter","option","length","required","form","$setValidity","$watch","newVal","undefined","AgreementView","$timeout","templateUrl","element","attrs","ctrl","init","CheckboxesItemCtrl","index","splice","push","setTimeout","find","focus","CheckboxesItem","CheckboxesViewCtrl","CheckboxesView","FormItemCtrl","$attrs","Attrs","templates","input","chooseFromList","multipleChoices","matrix","checkboxes","textarea","type","props","title","helpText","onDelete","FormItem","$compile","onUp","onDown","template","_getItemTemplate","replaceWith","FormItemsContainerCtrl","items","prevItem","nextItem","FormItemsContainer","FormViewCtrl","FormView","InputItemCtrl","InputItem","InputViewCtrl","InputView","elem","LabelItemCtrl","LabelItem","LabelViewCtrl","LabelView","MatrixItemCtrl","$document","RowContainer","angular","querySelector","ColumnContainer","rows","columns","bind","MatrixItem","MatrixViewCtrl","valid","some","row","$watchGroup","MatrixView","RadioButtonCtrl","RadioButton","RadioButtonViewCtrl","RadioButtonView","SelectCtrl","Select","SelectViewCtrl","SelectView","TextareaItemCtrl","TextareaItem","TextareaViewCtrl","TextareaView","service","MainController","directive","dest","src","Object","keys","reduce","result","key","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","scriptUrl","importScripts","location","document","currentScript","scripts","getElementsByTagName","Error","replace","p"],"mappings":"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","file":"angular-material-form-builder.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-material-form-builder\"] = factory();\n\telse\n\t\troot[\"angular-material-form-builder\"] = factory();\n})(self, function() {\nreturn ","export default __webpack_public_path__ + \"templates/directives/agreement-item/agreement-view.tpl.html/agreement-view.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/checkboxes-item/checkboxes-item.tpl.html/checkboxes-item.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/checkboxes-item/checkboxes-view.tpl.html/checkboxes-view.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/form-item/form-item.tpl.html/form-item.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/form-items-container/form-items-container.tpl.html/form-items-container.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/form-view/form-view.tpl.html/form-view.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/input-item/input-item.tpl.html/input-item.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/input-item/input-view.tpl.html/input-view.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/label-item/label-item.tpl.html/label-item.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/label-item/label-view.tpl.html/label-view.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/matrix-item/matrix-item.tpl.html/matrix-item.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/matrix-item/matrix-view.tpl.html/matrix-view.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/radio-button-item/radio-button-item.tpl.html/radio-button-item.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/radio-button-item/radio-button-view.tpl.html/radio-button-view.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/select-item/select-item.tpl.html/select-item.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/select-item/select-view.tpl.html/select-view.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/textarea-item/textarea-item.tpl.html/textarea-item.tpl.html\";","export default __webpack_public_path__ + \"templates/directives/textarea-item/textarea-view.tpl.html/textarea-view.tpl.html\";","/**\n * @ngInject\n *\n * @param {import('../../utils/utils.service').Utils} Utils\n * @param {JQLite} $element\n */\nfunction AgreementItemCtrl(Utils, $element) {\n  this.Element = $element\n  this.item = Utils.extend(this.item || {}, {\n    config: {\n      maxSelections: null,\n    },\n    options: [\n      {\n        value: '',\n        selected: false,\n      },\n    ],\n  })\n}\n\nexport { AgreementItemCtrl }\n","import { AgreementItemCtrl } from './agreement-item.controller'\n// import { default as AgreementItemTemplate } from './agreement-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass AgreementItem {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    this.restrict = 'E'\n    // this.templateUrl= AgreementItemTemplate,\n    this.scope = {\n      item: '=',\n    }\n    this.controller = AgreementItemCtrl\n    this.controllerAs = 'Agreement'\n    this.bindToController = true\n  }\n}\n\nexport { AgreementItem }\n","class AgreementViewCtrl {\n  /**\n   *\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n          selected: false,\n        },\n      ],\n    })\n\n    this.selectedOptions = this._getSelectedOptions()\n    this.disableOptions = false\n\n    this.isValid = true\n    this._updateView()\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  toggleSelectedOption() {\n    this.selectedOptions = this._getSelectedOptions()\n    this._updateView()\n    this._updateValidity()\n  }\n\n  _getSelectedOptions() {\n    return this.formItem.options.filter((option) => {\n      return option.selected\n    })\n  }\n\n  _updateView() {\n    if (!this.formItem.config.maxSelections) {\n      this.disableOptions = false\n    } else if (\n      this.selectedOptions.length === this.formItem.config.maxSelections\n    ) {\n      this.disableOptions = true\n    } else {\n      this.disableOptions = false\n    }\n  }\n\n  _updateValidity() {\n    if (this.formItem.config.required) {\n      this.isValid = this.selectedOptions.length > 0\n    } else {\n      this.isValid = true\n    }\n\n    this.form.$setValidity('minSelections', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watch('AgreementView.formItem.config.required', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateView()\n        this._updateValidity()\n      }\n    })\n  }\n}\n\nexport { AgreementViewCtrl }\n","import { AgreementViewCtrl } from './agreement-view.controller'\nimport { default as AgreementViewTemplate } from './agreement-view.tpl.html'\n\nclass AgreementView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n\n    this.templateUrl = AgreementViewTemplate\n    this.restrict = 'E'\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = AgreementViewCtrl\n    this.controllerAs = 'AgreementView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {AgreementViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { AgreementView }\n","class CheckboxesItemCtrl {\n  /**\n   * @ngInject\n   *\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        maxSelections: null,\n      },\n      options: [\n        {\n          value: '',\n          selected: false,\n        },\n      ],\n    })\n  }\n\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n      selected: false,\n    })\n    // Focus new element\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { CheckboxesItemCtrl }\n","import { default as CheckboxesItemTemplate } from './checkboxes-item.tpl.html'\nimport { CheckboxesItemCtrl } from './checkboxes-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nfunction CheckboxesItem() {\n  const directive = {\n    restrict: 'E',\n    templateUrl: CheckboxesItemTemplate,\n    scope: {\n      item: '=',\n    },\n    controller: CheckboxesItemCtrl,\n    controllerAs: 'Checkboxes',\n    bindToController: true,\n  }\n\n  return directive\n}\n\nexport { CheckboxesItem }\n","class CheckboxesViewCtrl {\n  /**\n   *\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem || {}, {\n      config: {},\n      options: [],\n    })\n\n    this.selectedOptions = this._getSelectedOptions()\n    this.disableOptions = false\n\n    this.isValid = true\n    this._updateView()\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  toggleSelectedOption() {\n    this.selectedOptions = this._getSelectedOptions()\n    this._updateView()\n    this._updateValidity()\n  }\n\n  _getSelectedOptions() {\n    return this.formItem.options.filter((option) => {\n      return option.selected\n    })\n  }\n\n  _updateView() {\n    if (!this.formItem.config.maxSelections) {\n      this.disableOptions = false\n    } else if (\n      this.selectedOptions.length === this.formItem.config.maxSelections\n    ) {\n      this.disableOptions = true\n    } else {\n      this.disableOptions = false\n    }\n  }\n\n  _updateValidity() {\n    if (this.formItem.config.required) {\n      this.isValid = this.selectedOptions.length > 0\n    } else {\n      this.isValid = true\n    }\n\n    this.form.$setValidity('minSelections', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watch('CheckboxesView.formItem.config.required', (newVal) => {\n      if (newVal !== undefined) {\n        this._updateView()\n        this._updateValidity()\n      }\n    })\n  }\n}\n\nexport { CheckboxesViewCtrl }\n","import { default as CheckboxesViewTemplate } from './checkboxes-view.tpl.html'\nimport { CheckboxesViewCtrl } from './checkboxes-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass CheckboxesView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n\n    this.restrict = 'E'\n    this.templateUrl = CheckboxesViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = CheckboxesViewCtrl\n    this.controllerAs = 'CheckboxesView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {CheckboxesViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { CheckboxesView }\n","class FormItemCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IAttributes} $attrs\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($attrs, Utils) {\n    this.Attrs = $attrs\n    this.Utils = Utils\n    this.templates = {\n      input: '<input-item item=\"FormItem.item\"></input-item>',\n      chooseFromList:\n        '<bet-form-choose-from-list item=\"FormItem.item\"></bet-form-choose-from-list>',\n      multipleChoices:\n        '<radio-button-item item=\"FormItem.item\"></radio-button-item>',\n      matrix: '<matrix-item item=\"FormItem.item\"></matrix-item>',\n      checkboxes: '<checkboxes-item item=\"FormItem.item\"></checkboxes-item>',\n      textarea: '<textarea-item item=\"FormItem.item\"></textarea-item>',\n    }\n    this.item = {}\n  }\n\n  init() {\n    this.item = this.Utils.extend(this.item || {}, {\n      type: this.Attrs.type,\n      props: {\n        title: '',\n        helpText: '',\n      },\n      config: {\n        required: false,\n      },\n    })\n  }\n\n  deleteClicked() {\n    this.onDelete({ item: this.item, index: this.index() })\n  }\n\n  /**\n   *\n   * @param {string} type\n   */\n  _getItemTemplate(type) {\n    const prefix =\n      '' +\n      '<div class=\"form-item-container\">' +\n      '<div class=\"form-item-actions\">' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onDelete\" ng-click=\"FormItem.deleteClicked()\"> ' +\n      '<md-icon class=\"material-icons small\">delete</md-icon>' +\n      '</md-button>' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onUp\" ng-click=\"FormItem.onUp({item: FormItem.item, index: FormItem.index()})\"> ' +\n      '<md-icon class=\"material-icons small\">arrow_drop_up</md-icon>' +\n      '</md-button>' +\n      '<md-button class=\"md-button\" ng-if=\"FormItem.Attrs.onDown\" ng-click=\"FormItem.onDown({item: FormItem.item, index: FormItem.index()})\"> ' +\n      '<md-icon class=\"material-icons small\">arrow_drop_down</md-icon>' +\n      '</md-button>' +\n      '</div>' +\n      '<md-input-container>' +\n      '<label>Field Title</label>' +\n      '<input ng-model=\"FormItem.item.props.title\"/>' +\n      '</md-input-container>' +\n      '<md-input-container>' +\n      '<label>Help Text</label>' +\n      '<input ng-model=\"FormItem.item.props.helpText\" />' +\n      '</md-input-container>'\n\n    const suffix =\n      '' +\n      '<md-input-container>' +\n      '<md-checkbox ng-model=\"FormItem.item.config.required\">Required field</md-checkbox>' +\n      '</md-input-container>' +\n      '</div>'\n\n    return prefix + this.templates[type] + suffix\n  }\n}\n\nexport { FormItemCtrl }\n","import { default as FormItemTemplate } from './form-item.tpl.html'\nimport { FormItemCtrl } from './form-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormItem {\n  /**\n   * @ngInject\n   * @param {ng.ICompileService} $compile\n   */\n  constructor($compile) {\n    this.$compile = $compile\n    this.restrict = 'E'\n    this.scope = {\n      item: '=',\n      onDelete: '&',\n      onUp: '&',\n      onDown: '&',\n      index: '&',\n    }\n    this.controller = FormItemCtrl\n    this.controllerAs = 'FormItem'\n    this.bindToController = true\n    this.templateUrl = FormItemTemplate\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormItemCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    const template = ctrl._getItemTemplate(attrs.type)\n    // const el = this.$compile(template)(scope)\n    // element.append(el)\n    // if done like above adds twice\n    element.replaceWith(this.$compile(template)(scope))\n    ctrl.init()\n    return element\n  }\n}\nexport { FormItem }\n","class FormItemsContainerCtrl {\n  constructor() {\n    /**\n     * @type {import('../../main/main.controller').FormConfig}\n     */\n    this.form = {\n      items: [],\n    }\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  delete(item, index) {\n    this.form.items.splice(index, 1)\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  up(item, index) {\n    if (index !== 0) {\n      const prevItem = this.form.items[index - 1]\n      this.form.items[index] = prevItem\n      this.form.items[index - 1] = item\n    }\n  }\n\n  /**\n   *\n   * @param {import('../../main/main.controller').Item} item\n   * @param {number} index\n   */\n  down(item, index) {\n    if (index !== this.form.items.length - 1) {\n      const nextItem = this.form.items[index + 1]\n      this.form.items[index] = nextItem\n      this.form.items[index + 1] = item\n    }\n  }\n}\n\nexport { FormItemsContainerCtrl }\n","import { FormItemsContainerCtrl } from './form-items-container.controller'\nimport { default as FormItemsContainerTemplate } from './form-items-container.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormItemsContainer {\n  constructor() {\n    this.restrict = 'E'\n    this.scope = {\n      form: '=',\n    }\n    this.templateUrl = FormItemsContainerTemplate\n    this.controller = FormItemsContainerCtrl\n    this.controllerAs = 'container'\n    this.bindToController = true\n  }\n}\n\nexport { FormItemsContainer }\n","class FormViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScù} $scope\n   */\n  constructor($scope) {\n    this.Scope = $scope\n  }\n\n  init() {}\n}\n\nexport { FormViewCtrl }\n","import { FormViewCtrl } from './form-view.controller'\nimport { default as FormViewTemplate } from './form-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass FormView {\n  constructor() {\n    this.restrict = 'E'\n    this.templateUrl = FormViewTemplate\n    this.scope = {\n      form: '=',\n    }\n    this.controller = FormViewCtrl\n    this.controllerAs = 'FormView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, element, attrs, ctrl) {\n    ctrl.init()\n  }\n}\n\nexport { FormView }\n","class InputItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        type: 'text',\n      },\n    })\n  }\n}\n\nexport { InputItemCtrl }\n","import { InputItemCtrl } from './input-item.controller'\nimport { default as InputItemTemplate } from './input-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass InputItem {\n  constructor() {\n    this.restrict = 'E'\n    this.templateUrl = InputItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = InputItemCtrl\n    this.controllerAs = 'Input'\n    this.bindToController = true\n  }\n}\n\nexport { InputItem }\n","class InputViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.Utils.extend(this.formItem, {\n      config: {},\n    })\n  }\n}\n\nexport { InputViewCtrl }\n","import { InputViewCtrl } from './input-view.controller'\nimport { default as InputViewTemplate } from './input-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass InputView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.templateUrl = InputViewTemplate\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.controller = InputViewCtrl\n    this.controllerAs = 'InputView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {FormItemCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { InputView }\n","class LabelItemCtrl {\n  /**\n   * @ngInject\n   * @param {JQLite} $element\n   */\n  constructor($element) {\n    this.Element = $element\n  }\n}\n\nexport { LabelItemCtrl }\n","import { LabelItemCtrl } from './label-item.controller'\nimport { default as LabelItemTemplate } from './label-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass LabelItem {\n  constructor() {\n    this.restrict = 'E'\n    this.templateUrl = LabelItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = LabelItemCtrl\n    this.controllerAs = 'Label'\n    this.bindToController = true\n  }\n}\n\nexport { LabelItem }\n","class LabelViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n  }\n\n  init() {\n    this.Utils.extend(this.formItem, {})\n  }\n}\n\nexport { LabelViewCtrl }\n","import { LabelViewCtrl } from './label-view.controller'\nimport { default as LabelViewTemplate } from './label-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass LabelView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.templateUrl = LabelViewTemplate\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.controller = LabelViewCtrl\n    this.controllerAs = 'LabelView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {LabelViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { LabelView }\n","class MatrixItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {ng.IDocumentService} $document\n   */\n  constructor(Utils, $document) {\n    this.RowContainer = angular.element(\n      $document[0].querySelector('.rowContainer')\n    )\n    this.ColumnContainer = angular.element(\n      $document[0].querySelector('.columnContainer')\n    )\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {\n        rows: [\n          {\n            value: '',\n          },\n        ],\n        columns: [\n          {\n            value: '',\n          },\n        ],\n      },\n    })\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteRow(index) {\n    this.item.config.rows.splice(index, 1)\n  }\n\n  addRow() {\n    this.item.config.rows.push({\n      value: '',\n    })\n\n    setTimeout(\n      function () {\n        const options = this.RowContainer.find('input')\n        const addedOption = options[options.length - 1]\n        addedOption.focus()\n      }.bind(this),\n      0\n    )\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteColumn(index) {\n    this.item.config.columns.splice(index, 1)\n  }\n\n  addColumn() {\n    this.item.config.columns.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.ColumnContainer.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { MatrixItemCtrl }\n","import { MatrixItemCtrl } from './matrix-item.controller'\nimport { default as MatrixItemTemplate } from './matrix-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass MatrixItem {\n  constructor() {\n    this.restrict = 'E'\n    this.templateUrl = MatrixItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = MatrixItemCtrl\n    this.controllerAs = 'Matrix'\n    this.bindToController = true\n  }\n}\nexport { MatrixItem }\n","class MatrixViewCtrl {\n  /**\n   * @ngInject\n   * @param {ng.IScope} $scope\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor($scope, Utils) {\n    this.Scope = $scope\n    this.Utils = Utils\n    this.isValid = true\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {\n        rows: [],\n        columns: [],\n      },\n    })\n\n    this._updateValidity()\n    if (this.isPreview()) {\n      this._enableWatchers()\n    }\n  }\n\n  _updateValidity() {\n    let valid = true\n    if (this.formItem.config.required) {\n      valid = !this.formItem.config.rows.some(\n        (row) => typeof row['selected'] === 'undefined'\n      )\n      //   for (let i = 0; i < this.formItem.config.rows.length; i++) {\n      //     if (typeof this.formItem.config.rows[i]['selected'] === 'undefined') {\n      //       valid = false\n      //       break\n      //     }\n      //   }\n    }\n\n    this.isValid = valid\n    this.form.$setValidity('required', this.isValid)\n  }\n\n  _enableWatchers() {\n    this.Scope.$watchGroup(\n      [\n        'MatrixView.formItem.config.required',\n        'MatrixView.formItem.config.rows.length',\n      ],\n      (newVal) => {\n        if (newVal !== undefined) {\n          this._updateValidity()\n        }\n      }\n    )\n  }\n}\nexport { MatrixViewCtrl }\n","import { default as MatrixViewTemplate } from './matrix-view.tpl.html'\nimport { MatrixViewCtrl } from './matrix-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass MatrixView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.templateUrl = MatrixViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = MatrixViewCtrl\n    this.controllerAs = 'MatrixView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {MatrixViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { MatrixView }\n","class RadioButtonCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n        },\n      ],\n    })\n  }\n\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { RadioButtonCtrl }\n","import { RadioButtonCtrl } from './radio-button-item.controller'\nimport { default as RadioButtonTemplate } from './radio-button-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass RadioButton {\n  constructor() {\n    this.restrict = 'E'\n    this.templateUrl = RadioButtonTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = RadioButtonCtrl\n    this.controllerAs = 'RadioButton'\n    this.bindToController = true\n  }\n}\n\nexport { RadioButton }\n","class RadioButtonViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n      options: [],\n    })\n  }\n}\n\nexport { RadioButtonViewCtrl }\n","import { RadioButtonViewCtrl } from './radio-button-view.controller'\nimport { default as RadioButtonViewTemplate } from './radio-button-view.tpl.html'\n\nclass RadioButtonView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.restrict = 'E'\n    this.templateUrl = RadioButtonViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = RadioButtonViewCtrl\n    this.controllerAs = 'RadioButtonView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {RadioButtonViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { RadioButtonView }\n","class SelectCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n      options: [\n        {\n          value: '',\n        },\n      ],\n    })\n  }\n\n  /**\n   *\n   * @param {number} index\n   */\n  deleteOption(index) {\n    this.item.options.splice(index, 1)\n  }\n\n  addOption() {\n    this.item.options.push({\n      value: '',\n    })\n\n    setTimeout(() => {\n      const options = this.Element.find('input')\n      const addedOption = options[options.length - 1]\n      addedOption.focus()\n    }, 0)\n  }\n}\n\nexport { SelectCtrl }\n","import { default as SelectTemplate } from './select-item.tpl.html'\nimport { SelectCtrl } from './select-item.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass Select {\n  constructor() {\n    this.restrict = 'E'\n    this.templateUrl = SelectTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = SelectCtrl\n    this.controllerAs = 'Select'\n    this.bindToController = true\n  }\n}\n\nexport { Select }\n","class SelectViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n      options: [],\n    })\n  }\n}\n\nexport { SelectViewCtrl }\n","import { default as SelectViewTemplate } from './select-view.tpl.html'\nimport { SelectViewCtrl } from './select-view.controller'\n\n/**\n * @implements {ng.IDirective}\n */\nclass SelectView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n\n    this.restrict = 'E'\n    this.templateUrl = SelectViewTemplate\n    this.scope = {\n      formItem: '=',\n      isPreview: '&',\n      form: '=',\n    }\n    this.controller = SelectViewCtrl\n    this.controllerAs = 'SelectView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {SelectViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { SelectView }\n","class TextareaItemCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   * @param {JQLite} $element\n   */\n  constructor(Utils, $element) {\n    this.Element = $element\n\n    this.item = Utils.extend(this.item || {}, {\n      config: {},\n    })\n  }\n}\n\nexport { TextareaItemCtrl }\n","import { TextareaItemCtrl } from './textarea-item.controller'\nimport { default as TextareaItemTemplate } from './textarea-item.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\nclass TextareaItem {\n  constructor() {\n    this.restrict = 'E'\n    this.templateUrl = TextareaItemTemplate\n    this.scope = {\n      item: '=',\n    }\n    this.controller = TextareaItemCtrl\n    this.controllerAs = 'Textarea'\n    this.bindToController = true\n  }\n}\n\nexport { TextareaItem }\n","class TextareaViewCtrl {\n  /**\n   * @ngInject\n   * @param {import('../../utils/utils.service').Utils} Utils\n   */\n  constructor(Utils) {\n    this.Utils = Utils\n    this.formItem = {}\n  }\n\n  init() {\n    this.formItem = this.Utils.extend(this.formItem, {\n      config: {},\n    })\n  }\n}\n\nexport { TextareaViewCtrl }\n","import { TextareaViewCtrl } from './textarea-view.controller'\nimport { default as TextareaViewTemplate } from './textarea-view.tpl.html'\n\n/**\n * @implements {ng.IDirective}\n */\n\nclass TextareaView {\n  /**\n   * @ngInject\n   * @param {ng.ITimeoutService} $timeout\n   */\n  constructor($timeout) {\n    this.$timeout = $timeout\n    this.scope = {\n      formItem: '=',\n      form: '=',\n    }\n    this.restrict = 'E'\n    this.templateUrl = TextareaViewTemplate\n\n    this.controller = TextareaViewCtrl\n    this.controllerAs = 'TextareaView'\n    this.bindToController = true\n  }\n\n  /**\n   * @see https://docs.angularjs.org/api/ng/service/$compile#-link-\n   * @param {ng.IScope} scope - scope\n   * @param {JQLite} element - element\n   * @param {ng.IAttributes} attrs - attributes\n   * @param {TextareaViewCtrl} ctrl - this instance controller\n   * @param {ng.ITranscludeFunction} transcludeFn - transclude function ($transclude)\n   */\n  link(scope, elem, attrs, ctrl) {\n    //this timeout is placed here in order to make sure that the creator directive of this view is finished its work\n    this.$timeout(function () {\n      ctrl.init()\n    }, 50)\n  }\n}\n\nexport { TextareaView }\n","import './index.scss'\nimport { AgreementItem } from './directives/agreement-item/agreement-item.directive'\nimport { AgreementView } from './directives/agreement-item/agreement-view.directive'\nimport { MainController } from './main/main.controller'\nimport { Utils } from './utils/utils.service'\nimport { CheckboxesItem } from './directives/checkboxes-item/checkboxes-item.directive'\nimport { CheckboxesView } from './directives/checkboxes-item/checkboxes-view.directive'\nimport { FormItem } from './directives/form-item/form-item.directive'\nimport { FormItemsContainer } from './directives/form-items-container/form-items-container.directive'\nimport { FormView } from './directives/form-view/form-view.directive'\nimport { InputItem } from './directives/input-item/input-item.directive'\nimport { InputView } from './directives/input-item/input-view.directive'\nimport { LabelItem } from './directives/label-item/label-item.directive'\nimport { LabelView } from './directives/label-item/label-view.directive'\nimport { MatrixItem } from './directives/matrix-item/matrix-item.directive'\nimport { MatrixView } from './directives/matrix-item/matrix-view.directive'\nimport { RadioButton } from './directives/radio-button-item/radio-button-item.directive'\nimport { RadioButtonView } from './directives/radio-button-item/radio-button-view.directive'\nimport { SelectView } from './directives/select-item/select-view.directive'\nimport { Select } from './directives/select-item/select-item.directive'\nimport { TextareaItem } from './directives/textarea-item/textarea-item.directive'\nimport { TextareaView } from './directives/textarea-item/textarea-view.directive'\n\nangular\n  .module('angularMaterialFormBuilder', [\n    'ngMaterial',\n    'angular-sortable-view',\n    'ngMessages',\n  ])\n  .service('Utils', Utils)\n  .controller('MainController', MainController)\n  .directive('agreementItem', AgreementItem)\n  .directive('agreementView', AgreementView)\n  .directive('checkboxesItem', CheckboxesItem)\n  .directive('checkboxesView', CheckboxesView)\n  .directive('formItem', FormItem)\n  .directive('formItemsContainer', FormItemsContainer)\n  .directive('formView', FormView)\n  .directive('inputItem', InputItem)\n  .directive('inputView', InputView)\n  .directive('labelItem', LabelItem)\n  .directive('labelView', LabelView)\n  .directive('matrixItem', MatrixItem)\n  .directive('matrixView', MatrixView)\n  .directive('radioButtonItem', RadioButton)\n  .directive('radioButtonView', RadioButtonView)\n  .directive('selectItem', Select)\n  .directive('selectView', SelectView)\n  .directive('textareaItem', TextareaItem)\n  .directive('textareaView', TextareaView)\n","/**\n * @typedef {{type:string}} Item\n * @typedef {{items: Item[]}} FormConfig\n */\n\nclass MainController {\n  /**\n   * @ngInject\n   */\n  constructor() {\n    /**\n     * @type {FormConfig}\n     */\n    this.form = {\n      items: [],\n    }\n  }\n\n  /**\n   * Add new Item\n   * @param {string} type\n   */\n  addItem(type) {\n    this.form.items.push({\n      type,\n    })\n  }\n\n  /**\n   * Remove item at index\n   * @param {Item} item\n   * @param {number} index\n   */\n  delete(item, index) {\n    this.form.items.splice(index, 1)\n  }\n\n  /**\n   * Move up (bounded)\n   * @param {Item} item\n   * @param {number} index\n   */\n  up(item, index) {\n    if (index !== 0) {\n      const prevItem = this.form.items[index - 1]\n      this.form.items[index] = prevItem\n      this.form.items[index - 1] = item\n    }\n  }\n\n  /**\n   * Move down (bounded)\n   * @param {Item} item\n   * @param {number} index\n   */\n  down(item, index) {\n    if (index !== this.form.items.length - 1) {\n      const nextItem = this.form.items[index + 1]\n      this.form.items[index] = nextItem\n      this.form.items[index + 1] = item\n    }\n  }\n}\n\nexport { MainController }\n","class Utils {\n  /**\n   * Recursively extend object properties\n   * @param {Object} dest\n   * @param {Object} src\n   * @returns {Object}\n   */\n  extend(dest, src) {\n    return Object.keys(src).reduce(\n      (result, key) => {\n        if (typeof result[key] === 'undefined') {\n          result[key] = src[key]\n        } else if (typeof src[key] === 'object') {\n          result[key] = this.extend(result[key], src[key])\n        }\n        return result\n      },\n      typeof dest === 'undefined' ? {} : dest\n    )\n  }\n}\n\nexport { Utils }\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./src/lib/index.module.js\");\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;"],"sourceRoot":""}